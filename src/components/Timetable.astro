---
import Section from './Section.astro';

const { month, jesuitenTimetable, josaphatTimetable, ...rest } = Astro.props;
const urlPath = Astro.request.url.replace('http://localhost:3000', '');
const isPreview = urlPath === '/ua/' || urlPath === '/de/';


const jesuitenDays = jesuitenTimetable.days;
const jesuitenAnnouncements = jesuitenTimetable.announcement;

const josaphatDays = josaphatTimetable.days;
const josaphatAnnouncements = josaphatTimetable.announcement;
---

<Section {...rest} class="container pt-1 pb-5 grid md:grid-cols-2 lg:grid-cols-3 gap-8">
    <h3 class="my-3 text-center title pt-3">Timetable</h3>

    {jesuitenAnnouncements && (
        <ul class="list-unstyled mb-3">
            <li>
                <div class="row text-center">
                    <div class="col-sm-2"></div>
                    <div class="col-sm-8">{jesuitenAnnouncements}</div>
                    <div class="col-sm-2"></div>
                </div>
            </li>
        </ul>
    )}

    <ul class="list-group">
        {jesuitenDays.map(day => (
            <li
                class="list-group-item"
                data-month={month}
                data-day={day.d}
            >
                <div class="row align-items-center text-center">
                    <div class="col-sm-2">
                        <div>x {day.d}</div>
                        {/* You can insert the genitive month name if available via props */}
                        {/* Example: <div>{genitiveMonthName}</div> */}
                    </div>
                    <div class="col-sm-6 text-start">
                        <table class="w-100">
                            <tbody>
                            {day.event?.map((event) => (
                                <tr>
                                    <td class="m-2 text-start" style="width: 30%;">{event.time}</td>
                                    <td class="m-2 align-middle">{event.title}</td>
                                </tr>
                            ))}
                            </tbody>
                        </table>
                    </div>
                    <div class="col-sm-4">{day.occasion}</div>
                </div>
            </li>
        ))}
    </ul>

    <div class="pt-3">
        {josaphatAnnouncements && (
            <ul class="list-unstyled mb-3">
                <li>
                    <div class="row text-center">
                        <div class="col-sm-2"></div>
                        <div class="col-sm-8">{josaphatAnnouncements}</div>
                        <div class="col-sm-2"></div>
                    </div>
                </li>
            </ul>
        )}

        <ul class="list-group">
            {josaphatDays.map(day => (
                <li
                    class="list-group-item"
                    data-month={month}
                    data-day={day.d}
                >
                    <div class="row align-items-center text-center">
                        <div class="col-sm-2">
                            <div>x {day.d}</div>
                            {/* You can insert the genitive month name if available via props */}
                            {/* Example: <div>{genitiveMonthName}</div> */}
                        </div>
                        <div class="col-sm-6 text-start">
                            <table class="w-100">
                                <tbody>
                                {day.event?.map((event) => (
                                    <tr>
                                        <td class="m-2 text-start" style="width: 30%;">{event.time}</td>
                                        <td class="m-2 align-middle">{event.title}</td>
                                    </tr>
                                ))}
                                </tbody>
                            </table>
                        </div>
                        <div class="col-sm-4">{day.occasion}</div>
                    </div>
                </li>
            ))}
        </ul>
    </div>
</Section>

<!---
{ isPreview && (
<script>
    const currentDate = new Date();
    let today = currentDate.getDate();
    let currentMonth = currentDate.getMonth();
    const timetableItems = document.getElementsByClassName("list-group-item");

    let daysLeftThisMonth = 0;
    let displayNextMonth = true;

    for(let index = 0; index < timetableItems.length; ++index) {

        const day = parseInt(timetableItems[index].dataset.day);
        const month = parseInt(timetableItems[index].dataset.month);

        let hideDay = true;

        const dayLaterToday = day >= today;
        const dayEarlierWeekFromToday = day <= today + 7;

        if(month === currentMonth) {
            if(dayLaterToday && dayEarlierWeekFromToday) {
                hideDay = false;
                daysLeftThisMonth++;
                displayNextMonth = day !== today + 7;
            }
        } else {
            const isNextMonth = month > currentMonth;
            if(isNextMonth && displayNextMonth && day <= ( 7 - daysLeftThisMonth)) {
                hideDay = false;
            }
        }

        if(hideDay) {
            timetableItems[index].style = "display: none;";
        }
    }
</script>
    )}
-->